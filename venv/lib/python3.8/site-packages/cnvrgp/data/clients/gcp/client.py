import os
from google.cloud import storage

from cnvrgp.utils.retry import retry
from cnvrgp.utils.storage_utils import download_file, create_dir_if_not_exists
from cnvrgp.data.clients.base_storage_client import BaseStorageClient


class GCPStorage(BaseStorageClient):
    def __init__(self, storage_meta):
        super().__init__(storage_meta)

        self.key_file = os.path.join(os.path.expanduser("~"), ".cnvrgp", ".gcp_cred.json")

        props = self._decrypt_dict(storage_meta, keys=["credentials"])

        download_file(props["credentials"], self.key_file)

        self.client = self._get_client()
        self.bucket = self.client.bucket("cnvrg-storage")

    @retry(log_error=True)
    def upload_single_file(self, local_path, object_path):
        try:
            blob = self.bucket.blob(object_path)
            blob.upload_from_filename(local_path)
        except Exception as e:
            print(e)

    @retry(log_error=True)
    def download_single_file(self, local_path, object_path):
        try:
            create_dir_if_not_exists(local_path)
            blob = self.bucket.blob(object_path)
            blob.download_to_filename(local_path)
        except Exception as e:
            print(e)

    def _get_client(self):
        return storage.Client.from_service_account_json(self.key_file)
